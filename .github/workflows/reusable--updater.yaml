name: reusable--updater
on:
  workflow_call:
    inputs:
      python-versions-json:
        required: true
        type: string
      python-versions-words:
        required: true
        type: string
    secrets:
      GHA_COMMIT_SIGNING_KEY:
        required: true

jobs:

  freshen-tool-versions:
    runs-on: ubuntu-latest
    steps:
      - name: Construct Foundation
        uses: emcd/python-devshim/.github/actions/clone@master
      - name: Freshen Git Modules
        run: /usr/bin/python3 develop.py freshen.git-modules
        shell: bash
      - name: Freshen Python Versions
        run: /usr/bin/python3 develop.py freshen.python --no-install --version=ALL
        shell: bash
      - name: Store Python Versions
        uses: actions/upload-artifact@v3
        with:
          name: python-descriptors
          path: .local/data/devshim/languages/python/descriptors/


  update-python-packages:
    needs: freshen-tool-versions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ${{ fromJSON(inputs.python-versions-json) }}
    steps:
      - name: Prepare Python Virtual Environment
        uses: emcd/python-devshim/.github/actions/python-venv@master
        with:
          python-version: '${{ matrix.python-version }}'
          use-versions-update: true
      - name: Freshen Git Modules
        run: /usr/bin/python3 develop.py freshen.git-modules
        shell: bash
      - name: Update Python Packages Fixtures
        run: |
          set -eu
          rm .local/configuration/pypackages.fixtures.toml
          /usr/bin/python3 develop.py freshen.pypackages
          mv .local/configuration/{,python-${{ matrix.python-version }}--}pypackages.fixtures.toml
        shell: bash
      - name: Store Updates
        uses: actions/upload-artifact@v3
        with:
          name: updates--${{ github.run_id }}
          path: .local/configuration/python-${{ matrix.python-version }}--pypackages.fixtures.toml

  create-pull-request:
    needs: update-python-packages
    runs-on: ubuntu-latest
    steps:
      - name: Prepare Python Virtual Environment
        uses: emcd/python-devshim/.github/actions/python-venv@master
        with:
          use-versions-update: true
      - name: Freshen Git Modules
        run: /usr/bin/python3 develop.py freshen.git-modules
        shell: bash
      - name: Freshen Git Hooks
        run: /usr/bin/python3 develop.py freshen.git-hooks
        shell: bash
      - name: Restore Updates
        uses: actions/download-artifact@v3
        with:
          name: updates--${{ github.run_id }}
          path: updates
      - name: Merge Updates
        run: |
          set -eu
          ls --format=verbose --recursive updates
          >.local/configuration/pypackages.fixtures.toml
          for f in updates/python-*--pypackages.fixtures.toml; do
              # Append each block, followed by a newline.
              echo | cat $f - >>.local/configuration/pypackages.fixtures.toml
          done
          rm --force --recursive updates
          # Efficiently trim trailing newline because... perfectionism.
          size=$(stat --format='%s' .local/configuration/pypackages.fixtures.toml)
          truncate --size=$((size - 1)) .local/configuration/pypackages.fixtures.toml
        shell: bash
      - name: Load PGP Key
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          git_commit_gpgsign: true
          git_user_signingkey: true
          gpg_private_key: '${{ secrets.GHA_COMMIT_SIGNING_KEY }}'
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          title: '[GHA] Freshen Project'
          commit-message: '[GHA] Freshen Project'
          committer: 'Github Actions Robot <emcd@users.noreply.github.com>'
          branch: gha-freshener
          delete-branch: true
          reviewers: emcd
