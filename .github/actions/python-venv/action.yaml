name: python-venv
description: 'Clones project, configures Python, and populates virtual environment.'
inputs:
  needs-clone:
    description: 'Clone repository or is it already cloned?'
    default: true
  python-version:
    description: 'Version of the Python interpreter.'
    required: true
    default: '3.7'
  python-configure-flags:
    description: 'Flags to pass to the configure script for Python builds.'
    required: false
  use-versions-update:
    description: 'Decache updated Python version specifiers?'
    required: true
    default: false
runs:
  using: composite
  steps:
    - name: Clone Repository Code
      if: "${{ 'true' == inputs.needs-clone }}"
      uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Install Asdf with Plugins
      #uses: ./.github/actions/asdf-vm
      uses: emcd/python-devshim/.github/actions/asdf-vm@master
    - name: Access Cache for Asdf Tool Versions (if requested)
      if: "${{ 'true' == inputs.use-versions-update }}"
      uses: actions/cache@v3
      with:
        key: asdf-tool-versions
        path: .tool-versions
    - name: Select Python Version
      run: |
        set -eu
        python_version="$(grep --extended-regexp '^python' .tool-versions | tr ' ' '\n' | grep --extended-regexp '^${{ inputs.python-version }}')"
        echo "ASDF_PYTHON_VERSION=${python_version}" >>${GITHUB_ENV}
      shell: bash
    - name: Access Cache for Python and Virtual Environment
      if: "${{ '' == inputs.python-configure-flags }}"
      id: python-cache
      uses: actions/cache@v3
      with:
        key: python--${{ env.ASDF_PYTHON_VERSION }}--${{ runner.os }}--${{ hashFiles('.local/configuration/pypackages.fixtures.toml') }}
        path: |
          ~/.asdf/installs/python
          .local/environments
    - name: Add Python Configure Flags (if requested)
      if: "${{ inputs.python-configure-flags }}"
      run: |
        set -eu
        echo 'PYTHON_CONFIGURE_OPTS=${{ inputs.python-configure-flags }}' >>${GITHUB_ENV}
      shell: bash
    - name: Install Python
      if: "${{ 'true' != steps.python-cache.outputs.cache-hit }}"
      run: asdf install python
      shell: bash
    - name: Create Virtual Environment
      if: "${{ 'true' != steps.python-cache.outputs.cache-hit }}"
      run: |
        set -eu
        /usr/bin/python3 develop.py build-python-venv --version ${{ env.ASDF_PYTHON_VERSION }}
        asdf reshim python
      shell: bash
